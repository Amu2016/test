// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto

#ifndef PROTOBUF_INCLUDED_test_2eproto
#define PROTOBUF_INCLUDED_test_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_test_2eproto 

namespace protobuf_test_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_test_2eproto
namespace Test {
class ReqPersonInfo;
class ReqPersonInfoDefaultTypeInternal;
extern ReqPersonInfoDefaultTypeInternal _ReqPersonInfo_default_instance_;
class ResPersonInfo;
class ResPersonInfoDefaultTypeInternal;
extern ResPersonInfoDefaultTypeInternal _ResPersonInfo_default_instance_;
}  // namespace Test
namespace google {
namespace protobuf {
template<> ::Test::ReqPersonInfo* Arena::CreateMaybeMessage<::Test::ReqPersonInfo>(Arena*);
template<> ::Test::ResPersonInfo* Arena::CreateMaybeMessage<::Test::ResPersonInfo>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace Test {

// ===================================================================

class ReqPersonInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Test.ReqPersonInfo) */ {
 public:
  ReqPersonInfo();
  virtual ~ReqPersonInfo();

  ReqPersonInfo(const ReqPersonInfo& from);

  inline ReqPersonInfo& operator=(const ReqPersonInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReqPersonInfo(ReqPersonInfo&& from) noexcept
    : ReqPersonInfo() {
    *this = ::std::move(from);
  }

  inline ReqPersonInfo& operator=(ReqPersonInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqPersonInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReqPersonInfo* internal_default_instance() {
    return reinterpret_cast<const ReqPersonInfo*>(
               &_ReqPersonInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ReqPersonInfo* other);
  friend void swap(ReqPersonInfo& a, ReqPersonInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReqPersonInfo* New() const final {
    return CreateMaybeMessage<ReqPersonInfo>(NULL);
  }

  ReqPersonInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReqPersonInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReqPersonInfo& from);
  void MergeFrom(const ReqPersonInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReqPersonInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 msgId = 1;
  bool has_msgid() const;
  void clear_msgid();
  static const int kMsgIdFieldNumber = 1;
  ::google::protobuf::int32 msgid() const;
  void set_msgid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Test.ReqPersonInfo)
 private:
  void set_has_msgid();
  void clear_has_msgid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 msgid_;
  friend struct ::protobuf_test_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResPersonInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Test.ResPersonInfo) */ {
 public:
  ResPersonInfo();
  virtual ~ResPersonInfo();

  ResPersonInfo(const ResPersonInfo& from);

  inline ResPersonInfo& operator=(const ResPersonInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResPersonInfo(ResPersonInfo&& from) noexcept
    : ResPersonInfo() {
    *this = ::std::move(from);
  }

  inline ResPersonInfo& operator=(ResPersonInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResPersonInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResPersonInfo* internal_default_instance() {
    return reinterpret_cast<const ResPersonInfo*>(
               &_ResPersonInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ResPersonInfo* other);
  friend void swap(ResPersonInfo& a, ResPersonInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResPersonInfo* New() const final {
    return CreateMaybeMessage<ResPersonInfo>(NULL);
  }

  ResPersonInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ResPersonInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ResPersonInfo& from);
  void MergeFrom(const ResPersonInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResPersonInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional bytes email = 4;
  bool has_email() const;
  void clear_email();
  static const int kEmailFieldNumber = 4;
  const ::std::string& email() const;
  void set_email(const ::std::string& value);
  #if LANG_CXX11
  void set_email(::std::string&& value);
  #endif
  void set_email(const char* value);
  void set_email(const void* value, size_t size);
  ::std::string* mutable_email();
  ::std::string* release_email();
  void set_allocated_email(::std::string* email);

  // required int32 msgId = 1;
  bool has_msgid() const;
  void clear_msgid();
  static const int kMsgIdFieldNumber = 1;
  ::google::protobuf::int32 msgid() const;
  void set_msgid(::google::protobuf::int32 value);

  // required int32 id = 3;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 3;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Test.ResPersonInfo)
 private:
  void set_has_msgid();
  void clear_has_msgid();
  void set_has_name();
  void clear_has_name();
  void set_has_id();
  void clear_has_id();
  void set_has_email();
  void clear_has_email();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr email_;
  ::google::protobuf::int32 msgid_;
  ::google::protobuf::int32 id_;
  friend struct ::protobuf_test_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ReqPersonInfo

// required int32 msgId = 1;
inline bool ReqPersonInfo::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqPersonInfo::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqPersonInfo::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqPersonInfo::clear_msgid() {
  msgid_ = 0;
  clear_has_msgid();
}
inline ::google::protobuf::int32 ReqPersonInfo::msgid() const {
  // @@protoc_insertion_point(field_get:Test.ReqPersonInfo.msgId)
  return msgid_;
}
inline void ReqPersonInfo::set_msgid(::google::protobuf::int32 value) {
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:Test.ReqPersonInfo.msgId)
}

// -------------------------------------------------------------------

// ResPersonInfo

// required int32 msgId = 1;
inline bool ResPersonInfo::has_msgid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ResPersonInfo::set_has_msgid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ResPersonInfo::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ResPersonInfo::clear_msgid() {
  msgid_ = 0;
  clear_has_msgid();
}
inline ::google::protobuf::int32 ResPersonInfo::msgid() const {
  // @@protoc_insertion_point(field_get:Test.ResPersonInfo.msgId)
  return msgid_;
}
inline void ResPersonInfo::set_msgid(::google::protobuf::int32 value) {
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:Test.ResPersonInfo.msgId)
}

// required bytes name = 2;
inline bool ResPersonInfo::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResPersonInfo::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResPersonInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResPersonInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& ResPersonInfo::name() const {
  // @@protoc_insertion_point(field_get:Test.ResPersonInfo.name)
  return name_.GetNoArena();
}
inline void ResPersonInfo::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Test.ResPersonInfo.name)
}
#if LANG_CXX11
inline void ResPersonInfo::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Test.ResPersonInfo.name)
}
#endif
inline void ResPersonInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Test.ResPersonInfo.name)
}
inline void ResPersonInfo::set_name(const void* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Test.ResPersonInfo.name)
}
inline ::std::string* ResPersonInfo::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:Test.ResPersonInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResPersonInfo::release_name() {
  // @@protoc_insertion_point(field_release:Test.ResPersonInfo.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResPersonInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Test.ResPersonInfo.name)
}

// required int32 id = 3;
inline bool ResPersonInfo::has_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ResPersonInfo::set_has_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ResPersonInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ResPersonInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ResPersonInfo::id() const {
  // @@protoc_insertion_point(field_get:Test.ResPersonInfo.id)
  return id_;
}
inline void ResPersonInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Test.ResPersonInfo.id)
}

// optional bytes email = 4;
inline bool ResPersonInfo::has_email() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResPersonInfo::set_has_email() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResPersonInfo::clear_has_email() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResPersonInfo::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_email();
}
inline const ::std::string& ResPersonInfo::email() const {
  // @@protoc_insertion_point(field_get:Test.ResPersonInfo.email)
  return email_.GetNoArena();
}
inline void ResPersonInfo::set_email(const ::std::string& value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Test.ResPersonInfo.email)
}
#if LANG_CXX11
inline void ResPersonInfo::set_email(::std::string&& value) {
  set_has_email();
  email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Test.ResPersonInfo.email)
}
#endif
inline void ResPersonInfo::set_email(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Test.ResPersonInfo.email)
}
inline void ResPersonInfo::set_email(const void* value, size_t size) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Test.ResPersonInfo.email)
}
inline ::std::string* ResPersonInfo::mutable_email() {
  set_has_email();
  // @@protoc_insertion_point(field_mutable:Test.ResPersonInfo.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResPersonInfo::release_email() {
  // @@protoc_insertion_point(field_release:Test.ResPersonInfo.email)
  if (!has_email()) {
    return NULL;
  }
  clear_has_email();
  return email_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResPersonInfo::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    set_has_email();
  } else {
    clear_has_email();
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:Test.ResPersonInfo.email)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Test

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_test_2eproto
